<<<<<<< HEAD
#!/usr/bin/env bash
# Bootstrap the dotfiles repo on a new computer
# $1: OPTIONAL: Path to repo

repo_remote="${1:-https://gitlab.com/mnewt/dotfiles.git}"
repo_name="$(basename "$repo_remote")"
repo_dir="$HOME/.config/repos"
repo_temp="$HOME/.config/repos/temp"

if [ -e "$HOME.git" || -e "repo_dir/$repo_name"]; then
  echo 
cd "$HOME"
mkdir -p "$repo_dir"
[ -e "$HOME/.git" ] && rm -rf "$HOME/.git"
git clone --separate-git-dir "$repo_dir/$repo_name" "$repo_remote" --no-checkout "$repo_temp"
mv "$repo_temp/.git" "$HOME"
rm -rf "$repo_temp"
=======
#!/usr/bin/env sh

[ -n "$1" ] && echo <<-END
bootstrap: Create a git repo in the destination directory with a separate git
           dir in $HOME/.config/repos.

Usage: 
  bootstrap GIT_REPO [DESTINATION]

GIT_REPO:     A remote git repo URI
DESTINATION:  The directory to check out files into (default is \$HOME)
END

repo_remote="$1"
destination="${2:-$HOME}"
repo="${repo_remote%.*}"
repo_dir="$HOME/.config/repos"
repo_temp="$HOME/.config/repos/temp"

if [ -e "$repo_dir/$repo" ]; then
  read -p "The repo dir at $repo_dir/$repo exists. Overwrite? [y/N] " choice
  case "$choice" in 
    y|Y )
      echo "Deleting and recreating repo..."
      ;;
    * )
      echo "Not making any changes. Exiting."
      exit 1
      ;;
  esac
fi

cd "$HOME"
mkdir -p "$repo_dir"
[ -e "$HOME/.git" ] && rm -rf "$HOME/.git"

git clone --separate-git-dir "$repo_dir/$repo" "$repo_remote" --no-checkout "$repo_temp"
mv "$repo_temp/.git" "$HOME"
rm -rf "$repo_temp"

git config --local status.showUntrackedFiles no

modified=$(git diff --name-status | awk '/^M/{print $2}')
if [ ${#modified[@]} -gt 0 ]; then
  backup_dir="$HOME/.backup.$repo"
  echo "Backing up files to $backup_dir"
  mkdir -p "backup_dir"
  cp -R $modified "$backup_dir"
fi
  
>>>>>>> 374389814de2b6a4ea87aac2a1d6bce7f9ecc074
git fetch
git reset --hard HEAD
