"*":
  "advanced-open-file":
    fuzzyMatch: true
    helmDirSwitch: true
  "atom-ctags":
    autoBuildTagsWhenActive: true
    cmd: "ctags"
  "atom-fuzzy-grep":
    grepCommandString: "rg -i -n -H --no-heading --column"
  "atom-slime":
    lispName: "/usr/local/bin/sbcl"
    slimePath: "/Users/mnewton/code/slime"
  "autocomplete-plus":
    confirmCompletion: "tab"
  "autocomplete-python":
    useKite: false
  autosave: {}
  "block-cursor":
    global:
      pulseDuration: 10000
  "bracket-matcher":
    autocompleteSmartQuotes: false
  core:
    destroyEmptyPanes: false
    disabledPackages: [
      "exception-reporting"
      "metrics"
      "language-gfm"
      "symbols-view"
      "linter"
      "atom-beautify"
      "atom-fuzzy-grep"
      "autocomplete-awk"
      "autocomplete-json"
      "autocomplete-modules"
      "autocomplete-python"
      "autocomplete-sql"
      "busy-signal"
      "git-time-machine"
      "intentions"
      "language-apache"
      "linter-clojure"
      "linter-ruby"
      "linter-shellcheck"
      "linter-ui-default"
      "proto-repl-sayid"
      "script"
      "set-syntax"
      "block-cursor"
    ]
    ignoredNames: [
      ".git"
      ".hg"
      ".svn"
      ".DS_Store"
      "._*"
      "Thumbs.db"
      "desktop.ini"
      "node_modules"
      "target"
    ]
    packagesWithKeymapsDisabled: [
      "lisp-paredit"
    ]
    projectHome: "/Users/mnewton/code"
    telemetryConsent: "no"
    themes: [
      "one-dark-ui"
      "one-dark-material-syntax"
    ]
    titleBar: "custom"
  editor:
    fontFamily: "Monaco"
    fontSize: 13
    invisibles: {}
    showIndentGuide: true
    showInvisibles: true
  "git-plus":
    general:
      analytics: false
  "goto-definition":
    performanceMode: true
  "highlight-selected":
    showInStatusBar: false
  "language-log":
    tail: true
  linter:
    lintOnChange: false
    lintOnOpen: false
    lintPreviewTabs: false
  "linter-clojure":
    clojureExecutablePath: "/Users/mnewton/.m2/repository/org/clojure/clojure/1.8.0/clojure-1.8.0.jar"
    javaExecutablePath: "/usr/bin/java"
  "linter-ui-default":
    panelHeight: 300
    showPanel: true
  "lisp-paredit":
    indentationForms: [
      "&"
      "monitor-exit"
      "/^case/"
      "try"
      "/^reify/"
      "finally"
      "/^(.*-)?loop/"
      "/^let/"
      "/^import/"
      "new"
      "/^deftype/"
      "/^let/"
      "fn"
      "recur"
      "/^set.*!$/"
      "."
      "var"
      "quote"
      "catch"
      "throw"
      "monitor-enter"
      "ns"
      "in-ns"
      "/^([^/]+/)?def/"
      "/^if/"
      "/^when/"
      "/^unless/"
      "while"
      "for"
      "/(^|/)with/"
      "testing"
      "while"
      "cond"
      "condp"
      "apply"
      "binding"
      "locking"
      "proxy"
      "reify"
      "/^extend/"
      "facts"
      "do"
      "doseq"
      "dorun"
      "doall"
      "dosync"
      "start"
      "stop"
      "try"
      "catch"
      "finally"
      "/^let/"
      "are"
      "/^def/"
      "fn"
      "cond"
      "condp"
      "/^if.*/"
      "/.*\\/for/"
      "for"
      "for-all"
      "/^when.*/"
      "testing"
      "doseq"
      "dotimes"
      "ns"
      "routes"
      "GET"
      "POST"
      "PUT"
      "DELETE"
      "extend-protocol"
      "loop"
      "do"
      "case"
      "with-bindings"
      "checking"
      "with-open"
    ]
    strict: false
  "one-dark-ui": {}
  "open-recent": {}
  parinfer:
    "file-extensions": [
      ".boot"
      ".cl"
      ".clj"
      ".cljc"
      ".cljs"
      ".edn"
      ".el"
      ".lfe"
      ".lisp"
      ".lsp"
      ".rkt"
      ".scm"
    ]
  "proto-repl":
    autoPrettyPrint: true
    bootPath: "/usr/local/bin/boot"
    displayExecutedCodeInRepl: false
    displayHelpText: false
    leinPath: "/usr/local/bin/lein"
    refreshOnReplStart: false
    showInlineResults: false
    useClojureSyntax: false
  "remote-edit2":
    filterHostsUsing:
      alias: true
  "save-session":
    dataSaveFolder: "/Users/mnewton/.atom/packages/save-session/projects"
  "shebang-set-grammar":
    changeNonPlainText: true
  "split-diff":
    diffWords: true
    ignoreWhitespace: true
    leftEditorColor: "red"
    rightEditorColor: "green"
    scrollSyncType: "Vertical + Horizontal"
    syncHorizontalScroll: true
  tabs:
    usePreviewTabs: true
  "tree-view":
    hideVcsIgnoredFiles: true
  welcome:
    showOnStartup: false
".clojure.source":
  "bracket-matcher":
    autocompleteCharacters: [
      "()"
      "[]"
      "{}"
      "\"\""
    ]
  editor:
    autoIndent: true
    autoIndentOnPaste: false
    nonWordCharacters: "()\"':,;~@#$%^&{}[]`"
